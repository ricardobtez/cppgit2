name: Build and Publish package workflow

on:
  workflow_call:
    inputs:
      package-version:
        description: The package version to release
        required: true
        type: string
      publish:
        description: Publish the package
        required: true
        type: boolean
        default: false

jobs:
  build:
    name: Builds the package
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        build_type: [Release, Debug]
        cpp_compiler: [g++, clang++]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install needed tools
        shell: bash
        run: sudo apt-get install ninja-build

      - uses: actions/checkout@v4
        with:
          repository: ricardobtez/conan_profiles
          path: conan_profiles
          token: ${{ secrets.GH_TOKEN }}

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/cmake-build-${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"
          if [ ${{ matrix.cpp_compiler }} == "clang++" ]; then
            echo "profile=linux_x86_64-clang" >> "$GITHUB_OUTPUT"
          else
            echo "profile=linux_x86_64-gcc" >> "$GITHUB_OUTPUT"
          fi
          echo Building version "${{ inputs.package_version }}"

      - name: Get conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.0.14

      - name: Configure conan profiles
        shell: bash
        run: conan config install -t dir ${{ github.workspace }}/conan_profiles

      - name: Add own conan server
        shell: bash
        run: conan remote add --index 0 conan_remote http://${{ secrets.CONAN_SERVER_ADDRESS }}:9300

      - name: Login into own conan server
        shell: bash
        run: conan remote login -p ${{ secrets.CONAN_CONFIG_PASSWORD }} conan_remote ghuser

      - name: Create package
        shell: bash
        run: |
          conan create --version "${{ inputs.package-version }}" . --build-require \
              --build=missing -pr:a ${{ steps.strings.outputs.profile }} -s:a build_type=${{ matrix.build_type }}

      - name: Publish package
        if: ${{ inputs.publish }} == true
        shell: bash
        run: |
          conan upload -r conan_remote cppgit2/${{ inputs.package-version }}
